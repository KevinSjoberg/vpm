#!/bin/sh
version="0.0.1"
log_dir="$HOME/.vpmlog"
plugin_dir="$HOME/.vim/bundle"
plugin_spec="$HOME/.vimplugins"

# command helpers
#
function say {
  echo "$1: $2"

  if [ -n "$3" ]; then
    exit $3
  fi
}

function empty {
  [ -z "$1" ]
}

function plugins {
  local plugin_name=${1-*}

  find $plugin_dir -iname "$plugin_name" -mindepth 1 -maxdepth 1 -type d
}

function plugin_insert {
  local plugin=$1
  local plugin_repository="git@github.com:$plugin.git"

  cd $plugin_dir
  git clone $plugin_repository >> $log_dir 2>&1
}

function plugin_remove {
  local plugin_name=$1

  cd $plugin_dir
  rm -rf $plugin_name
}

function plugin_update {
  local plugin_path=$1

  cd $plugin_path
  git pull origin master >> $log_dir 2>&1
}

function plugin_inserted {
  local plugin_name=$1

  [ -d $plugin_dir/$plugin_name ]
}

function plugin_spec_clean {
  cat /dev/null > $plugin_spec
}

function plugin_spec_insert {
  local plugin=$1

  echo $plugin >> $plugin_spec
}

function plugin_from_remote {
  local plugin_path=$1

  cd $plugin_path
  git config --get remote.origin.url | perl -pe 's/(?:git[:\/\/@]*github.com[:\/])(.*)\.git/$1/g'
}

# command functions
#
function help() {
cat <<-HELP
Usage:
  vpm [OPTION] [PLUGIN]

Commands:

  Help:
    vpm
    vpm -h
    vpm --help

  List:
    vpm -l
    vpm --list

  Insert:
    vpm          PLUGIN
    vpm -i       PLUGIN
    vpm --insert PLUGIN

  Remove:
    vpm -r       PLUGIN
    vpm --remove PLUGIN

  Update:
    vpm -u       [PLUGIN]
    vpm --update [PLUGIN]

  Version:
    vpm -v
    vpm --version

  Snapshot:
    vpm -s
    vpm --snapshot

  Bootstrap:
    vpm -b
    vpm --bootstrap
HELP
}

function list {
  unset CLICOLOR && ls $plugin_dir
}

function insert {
  local plugin=$1
  local plugin_name=$(basename $plugin)

  if empty $plugin_name; then
    help
  fi

  if plugin_inserted $plugin_name; then
    say "failure" "$plugin_name already inserted" 0
  fi

  if plugin_insert $plugin; then
    say "success" "$plugin_name inserted" 0
  else
    say "failure" "$plugin_name could not be inserted" 1
  fi
}

function remove {
  local plugin_name=$1

  if empty $plugin_name; then
    help
  fi

  if plugin_inserted $plugin_name; then
    plugin_remove $plugin_name
    say "success" "$plugin_name removed" 0
  else
    say "failure" "$plugin_name not inserted" 1
  fi
}

function update {
  for plugin_path in $(plugins $1); do
    local plugin_name=$(basename $plugin_path)

    if plugin_update $plugin_path; then
      say "success" "$plugin_name updated"
    else
      say "failure" "$plugin_name could not be updated"
    fi
  done
}

function version {
  echo $version
}

function snapshot {
  plugin_spec_clean

  for plugin_path in $(plugins); do
    local plugin=$(plugin_from_remote $plugin_path)

    plugin_spec_insert $plugin
  done

  say "success" "snapshot taken from installed plugins"
}

function bootstrap {
  while read plugin; do
    local plugin_name=$(basename $plugin)

    if plugin_inserted $plugin_name; then
      continue
    fi

    if plugin_insert $plugin; then
      say "success" "$plugin_name inserted"
    else
      say "failure" "$plugin_name could not be inserted"
    fi
  done < $plugin_spec
}

# Main
#
case $1 in
  "-h"|"--help")
    help
    ;;
  "-l"|"--list")
    list
    ;;
  "-i"|"--insert")
    insert $2
    ;;
  "-r"|"--remove")
    remove $2
    ;;
  "-u"|"--update")
    update $2
    ;;
  "-v"|"--version")
    version
    ;;
  "-s"|"--snapshot")
    snapshot
    ;;
  "-b"|"--bootstrap")
    bootstrap
    ;;
  "")
    help
    ;;
  *)
    insert $1
    ;;
esac
